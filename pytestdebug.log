versions pytest-7.2.2, python-3.8.16.final.0
cwd=/Users/nikebless/code/mats/situational-awareness
args=('tests/run_tests.py', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x102baf7f0>
    pytest_plugin_registered [hook]
        plugin: <Session situational-awareness exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x102baf7f0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x102da8280>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x102da8040>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x1011f7250>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x102baf7f0>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/anyio/pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x102da8280>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x102da8040>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x102da8760>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x102da88b0>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x1011f7250>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x102baf7f0>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/anyio/pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x102da8280>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x102da8040>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x102da8760>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x102da88b0>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x102e12f10>
          manager: <_pytest.config.PytestPluginManager object at 0x1011f7250>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x102baf7f0>
          start_path: /Users/nikebless/code/mats/situational-awareness
          startdir: /Users/nikebless/code/mats/situational-awareness
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      early skip of rewriting module: email.errors [assertion]
      early skip of rewriting module: email._policybase [assertion]
      early skip of rewriting module: email.header [assertion]
      early skip of rewriting module: email.quoprimime [assertion]
      early skip of rewriting module: email.base64mime [assertion]
      early skip of rewriting module: email.charset [assertion]
      early skip of rewriting module: email.encoders [assertion]
      early skip of rewriting module: quopri [assertion]
      early skip of rewriting module: email.utils [assertion]
      early skip of rewriting module: email._parseaddr [assertion]
      early skip of rewriting module: calendar [assertion]
      early skip of rewriting module: email.message [assertion]
      early skip of rewriting module: uu [assertion]
      early skip of rewriting module: email._encoded_words [assertion]
      early skip of rewriting module: email.iterators [assertion]
      finish pytest_report_header --> [['rootdir: /Users/nikebless/code/mats/situational-awareness', 'plugins: anyio-3.6.2'], ['using: pytest-7.2.2', 'setuptools registered plugins:', '  anyio-3.6.2 at /Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/anyio/pytest_plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['tests/run_tests.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument (PosixPath('/Users/nikebless/code/mats/situational-awareness/tests/run_tests.py'), []) [collection]
            pytest_collect_file [hook]
                parent: <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /Users/nikebless/code/mats/situational-awareness/tests/run_tests.py
                path: /Users/nikebless/code/mats/situational-awareness/tests/run_tests.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /Users/nikebless/code/mats/situational-awareness/tests/run_tests.py
                  path: /Users/nikebless/code/mats/situational-awareness/tests/run_tests.py
              finish pytest_pycollect_makemodule --> <Module tests/run_tests.py> [hook]
            finish pytest_collect_file --> [<Module tests/run_tests.py>] [hook]
          matchnodes [<Module tests/run_tests.py>] [] [collection]
            matchnodes finished ->  1 nodes [collection]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module tests/run_tests.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/run_tests.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/run_tests.py>
      find_module called for: run_tests [assertion]
      matched test file (was specified on cmdline): '/Users/nikebless/code/mats/situational-awareness/tests/run_tests.py' [assertion]
      _read_pyc(/Users/nikebless/code/mats/situational-awareness/tests/run_tests.py): out of date [assertion]
      rewriting PosixPath('/Users/nikebless/code/mats/situational-awareness/tests/run_tests.py') [assertion]
      early skip of rewriting module: hashlib [assertion]
      early skip of rewriting module: _hashlib [assertion]
      early skip of rewriting module: _blake2 [assertion]
      early skip of rewriting module: _sha3 [assertion]
      early skip of rewriting module: src [assertion]
      early skip of rewriting module: src.common [assertion]
      early skip of rewriting module: debugpy [assertion]
      early skip of rewriting module: debugpy._version [assertion]
      early skip of rewriting module: debugpy.common [assertion]
      early skip of rewriting module: debugpy.common.compat [assertion]
      early skip of rewriting module: debugpy.common.fmt [assertion]
      early skip of rewriting module: debugpy.common.json [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: os
            obj: <module 'os' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/os.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: argparse
            obj: <module 'argparse' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/argparse.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: hashlib
            obj: <module 'hashlib' from '/Users/nikebless/miniconda3/envs/sit-awa/lib/python3.8/hashlib.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: Dict
            obj: typing.Dict
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: attach_debugger
            obj: <function attach_debugger at 0x102fceaf0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: load_from_jsonl
            obj: <function load_from_jsonl at 0x1030048b0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: md5sum
            obj: <function md5sum at 0x102f45430>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: TestDatasetUnchangedStrict
            obj: <class 'run_tests.TestDatasetUnchangedStrict'>
        finish pytest_pycollect_makeitem --> <Class TestDatasetUnchangedStrict> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: TestDatasetUnchanged
            obj: <class 'run_tests.TestDatasetUnchanged'>
        finish pytest_pycollect_makeitem --> <Class TestDatasetUnchanged> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/run_tests.py>
            name: test_simple_questions_ug100_rg1000_gph10_off10
            obj: <function test_simple_questions_ug100_rg1000_gph10_off10 at 0x103004b80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x102fc52b0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_simple_questions_ug100_rg1000_gph10_off10>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/run_tests.py' lenresult=3 outcome='passed'> [hook]
    genitems <Class TestDatasetUnchangedStrict> [collection]
      pytest_collectstart [hook]
          collector: <Class TestDatasetUnchangedStrict>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestDatasetUnchangedStrict>
      finish pytest_make_collect_report --> <CollectReport 'tests/run_tests.py::TestDatasetUnchangedStrict' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/run_tests.py::TestDatasetUnchangedStrict' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Class TestDatasetUnchanged> [collection]
      pytest_collectstart [hook]
          collector: <Class TestDatasetUnchanged>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestDatasetUnchanged>
      finish pytest_make_collect_report --> <CollectReport 'tests/run_tests.py::TestDatasetUnchanged' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/run_tests.py::TestDatasetUnchanged' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Function test_simple_questions_ug100_rg1000_gph10_off10> [collection]
      pytest_itemcollected [hook]
          item: <Function test_simple_questions_ug100_rg1000_gph10_off10>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/run_tests.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x102baf7f0>
          items: [<Function test_simple_questions_ug100_rg1000_gph10_off10>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x102baf7f0>
            items: [<Function test_simple_questions_ug100_rg1000_gph10_off10>]
            start_path: /Users/nikebless/code/mats/situational-awareness
            startdir: /Users/nikebless/code/mats/situational-awareness
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PytestCollectionWarning("cannot collect test class 'TestDatasetUnchangedStrict' because it has a __init__ constructor (from: tests/run_tests.py)"), category : 'PytestCollectionWarning', filename : '/Users/nikebless/code/mats/situational-awareness/tests/run_tests.py', lineno : 17, line : None}
          nodeid: 
          when: collect
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PytestCollectionWarning("cannot collect test class 'TestDatasetUnchanged' because it has a __init__ constructor (from: tests/run_tests.py)"), category : 'PytestCollectionWarning', filename : '/Users/nikebless/code/mats/situational-awareness/tests/run_tests.py', lineno : 49, line : None}
          nodeid: 
          when: collect
          location: None
      finish pytest_warning_recorded --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session situational-awareness exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>
      pytest_runtest_protocol [hook]
          item: <Function test_simple_questions_ug100_rg1000_gph10_off10>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10
            location: ('tests/run_tests.py', 87, 'test_simple_questions_ug100_rg1000_gph10_off10')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_simple_questions_ug100_rg1000_gph10_off10>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_simple_questions_ug100_rg1000_gph10_off10>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x102baf7f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_simple_questions_ug100_rg1000_gph10_off10>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_simple_questions_ug100_rg1000_gph10_off10>
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0x102baf7f0>
                op: ==
                left: 8325
                right: 0
            finish pytest_assertrepr_compare --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_simple_questions_ug100_rg1000_gph10_off10>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('Prompt and completion pairs are different for file all [Different pairs: 8325]\nassert 8325 == 0\n +  ... What would you do with a million dollars?" to have a response "A: Buy a house"\\n\\n<END GUIDANCE ANSWERS>\'), ...})') tblen=26>>
        finish pytest_runtest_makereport --> <TestReport 'tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x102baf7f0>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_simple_questions_ug100_rg1000_gph10_off10>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('Prompt and completion pairs are different for file all [Different pairs: 8325]\nassert 8325 == 0\n +  ... What would you do with a million dollars?" to have a response "A: Buy a house"\\n\\n<END GUIDANCE ANSWERS>\'), ...})') tblen=2>>
            report: <TestReport 'tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_simple_questions_ug100_rg1000_gph10_off10>
            nextitem: None
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_simple_questions_ug100_rg1000_gph10_off10>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x102baf7f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10
            location: ('tests/run_tests.py', 87, 'test_simple_questions_ug100_rg1000_gph10_off10')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session situational-awareness exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=1 testscollected=1>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x102da8760>
          exitstatus: 1
          config: <_pytest.config.Config object at 0x102baf7f0>
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments.formatters [assertion]
      early skip of rewriting module: pygments.formatters._mapping [assertion]
      early skip of rewriting module: pygments.plugin [assertion]
      early skip of rewriting module: pygments.util [assertion]
      early skip of rewriting module: pygments.formatters.terminal [assertion]
      early skip of rewriting module: pygments.formatter [assertion]
      early skip of rewriting module: pygments.styles [assertion]
      early skip of rewriting module: pygments.token [assertion]
      early skip of rewriting module: pygments.console [assertion]
      early skip of rewriting module: pygments.lexers [assertion]
      early skip of rewriting module: pygments.lexers._mapping [assertion]
      early skip of rewriting module: pygments.modeline [assertion]
      early skip of rewriting module: pygments.lexers.python [assertion]
      early skip of rewriting module: pygments.lexer [assertion]
      early skip of rewriting module: pygments.filter [assertion]
      early skip of rewriting module: pygments.filters [assertion]
      early skip of rewriting module: pygments.regexopt [assertion]
      early skip of rewriting module: pygments.unistring [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/run_tests.py::test_simple_questions_ug100_rg1000_gph10_off10' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x102baf7f0>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x102baf7f0>
    finish pytest_unconfigure --> [] [hook]
